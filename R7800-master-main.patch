diff --git a/.config.init b/.config.init
new file mode 100644
index 0000000000..787c9755f4
--- /dev/null
+++ b/.config.init
@@ -0,0 +1,160 @@
+# Use "make defconfig" to expand this to a full .config
+CONFIG_TARGET_ipq806x=y
+CONFIG_TARGET_ipq806x_generic=y
+CONFIG_TARGET_ipq806x_generic_DEVICE_netgear_r7800=y
+#CONFIG_TESTING_KERNEL=y
+
+# Per-package build logs in <buildroot>/logs
+CONFIG_DEVEL=y
+CONFIG_BUILD_LOG=y
+
+# Debugging options (build gdbserver, include package debug)
+CONFIG_PACKAGE_gdbserver=y
+CONFIG_DEBUG=y
+
+# Include package list in build
+CONFIG_INCLUDE_CONFIG=y
+
+# Longer waiting for failsafe button push
+###CONFIG_IMAGEOPT=y
+###CONFIG_PREINITOPT=y
+###CONFIG_TARGET_PREINIT_TIMEOUT=5
+
+# Busybox tweaks
+CONFIG_BUSYBOX_CUSTOM=y
+#CONFIG_BUSYBOX_CONFIG_DIFF=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_EDITING_SAVEHISTORY=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_EDITING_SAVE_ON_EXIT=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_LESS_FLAGS=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_LESS_REGEXP=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_LESS_WINCH=y
+
+### Build also ath10k mainline .ipk
+### (disable this if you use the below section to fully switch to mainline)
+CONFIG_PACKAGE_kmod-ath10k=m
+
+## # Mainline ath10k wifi firmware and driver instead of -ct
+## CONFIG_PACKAGE_ath10k-firmware-qca9984=y
+## # CONFIG_PACKAGE_ath10k-firmware-qca9984-ct is not set
+## CONFIG_PACKAGE_kmod-ath10k=y
+## # CONFIG_PACKAGE_kmod-ath10k-ct is not set
+
+# Add-on programs
+CONFIG_PACKAGE_ccrypt=y
+CONFIG_PACKAGE_curl=y
+CONFIG_LIBCURL_OPENSSL=y
+CONFIG_PACKAGE_diffutils=y
+CONFIG_DROPBEAR_ECC=y
+CONFIG_PACKAGE_htop=y
+CONFIG_PACKAGE_irqbalance=y
+CONFIG_PACKAGE_mtr-nojson=y
+CONFIG_PACKAGE_nano-full=y
+CONFIG_PACKAGE_patch=y
+CONFIG_PACKAGE_tcpdump-mini=y
+CONFIG_PACKAGE_tree=y
+CONFIG_PACKAGE_wget-ssl=y
+
+# USB device mount & file systems support
+CONFIG_PACKAGE_block-mount=y
+CONFIG_PACKAGE_kmod-usb-storage=y
+CONFIG_PACKAGE_kmod-fs-cifs=y
+CONFIG_PACKAGE_kmod-fs-exfat=y
+CONFIG_PACKAGE_libblkid=y
+CONFIG_PACKAGE_kmod-fs-ext4=y
+CONFIG_PACKAGE_kmod-fs-hfsplus=y
+CONFIG_PACKAGE_kmod-fs-msdos=y
+CONFIG_PACKAGE_kmod-fs-ntfs3=y
+CONFIG_PACKAGE_kmod-nls-cp1250=y
+CONFIG_PACKAGE_kmod-nls-cp437=y
+CONFIG_PACKAGE_kmod-nls-cp850=y
+CONFIG_PACKAGE_kmod-nls-iso8859-1=y
+CONFIG_PACKAGE_kmod-nls-iso8859-15=y
+CONFIG_PACKAGE_kmod-nls-utf8=y
+
+# IPv6 support
+CONFIG_PACKAGE_6in4=y
+CONFIG_PACKAGE_6to4=y
+CONFIG_PACKAGE_6rd=y
+
+# WLAN/WPS support
+CONFIG_PACKAGE_hostapd-utils=y
+#CONFIG_WPA_MSG_MIN_PRIORITY=2
+CONFIG_PACKAGE_wpad-openssl=y
+# CONFIG_PACKAGE_wpad-basic-mbedtls is not set
+# CONFIG_PACKAGE_libustream-mbedtls is not set
+
+# SSL certificates
+CONFIG_PACKAGE_ca-certificates=y
+
+# Luci (SSL from OpenSSL)
+CONFIG_PACKAGE_luci-ssl-openssl=y
+CONFIG_PACKAGE_luci-app-commands=y
+CONFIG_PACKAGE_luci-app-ddns=y
+CONFIG_PACKAGE_luci-app-opkg=y
+CONFIG_PACKAGE_luci-app-sqm=y
+CONFIG_PACKAGE_luci-app-uhttpd=y
+CONFIG_PACKAGE_luci-app-upnp=y
+# CONFIG_LUCI_JSMIN is not set
+
+# Luci statistics
+CONFIG_PACKAGE_luci-app-statistics=y
+CONFIG_PACKAGE_collectd-mod-conntrack=y
+CONFIG_PACKAGE_collectd-mod-cpufreq=y
+CONFIG_PACKAGE_collectd-mod-dhcpleases=y
+CONFIG_PACKAGE_collectd-mod-entropy=y
+CONFIG_PACKAGE_collectd-mod-ping=y
+CONFIG_PACKAGE_collectd-mod-sqm=y
+CONFIG_PACKAGE_collectd-mod-thermal=y
+CONFIG_PACKAGE_collectd-mod-uptime=y
+
+# Build openwrt-2020 theme, default is still bootstrap
+CONFIG_PACKAGE_luci-theme-openwrt-2020=y
+
+# kernel support for tunnels, VPNs
+CONFIG_PACKAGE_kmod-tun=y
+
+# wireguard and unetd (new wg-based mesh VPN)
+CONFIG_PACKAGE_luci-proto-wireguard=y
+CONFIG_PACKAGE_luci-proto-unet=y
+
+# PPTP support
+CONFIG_PACKAGE_luci-proto-ppp=y
+CONFIG_PACKAGE_ppp-mod-pptp=y
+
+# iptables add-on ipsec
+CONFIG_PACKAGE_iptables-mod-ipsec=y
+
+# Support for IETF BCP38
+CONFIG_PACKAGE_luci-app-bcp38=y
+
+# Adblock package with Luci support, initially disabled
+CONFIG_PACKAGE_luci-app-adblock=y
+
+# BanIP package with Luci support, initially disabled
+CONFIG_PACKAGE_luci-app-banip=y
+
+# nlbwmon app
+CONFIG_PACKAGE_luci-app-nlbwmon=y
+
+# chaoskey TRNG USB dongle
+####CONFIG_PACKAGE_kmod-chaoskey=y
+
+## Build and include qosify, if the LLVM toolchain has been downloaded and
+## extracted to the buildroot before the build config is started.
+## The file can be downloaded from buildbot snapshot target downloads.
+## https://downloads.openwrt.org/snapshots/targets/ipq806x/generic/llvm-bpf-15.0.7.Linux-x86_64.tar.xz
+##
+CONFIG_USE_LLVM_PREBUILT=y
+CONFIG_PACKAGE_qosify=y
+CONFIG_PACKAGE_kmod-sched-bpf=y
+
+# NFT support for iptables
+CONFIG_PACKAGE_iptables-nft=y
+CONFIG_PACKAGE_ip6tables-nft=y
+
+# ipset and kernel module
+CONFIG_PACKAGE_ipset=y
+
+# sftp server lib for newest scp in Ubuntu
+CONFIG_PACKAGE_openssh-sftp-server=y
+
diff --git a/.gitignore b/.gitignore
index a80cdbbea3..bd42cb89f3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -13,15 +13,12 @@
 /logs
 /feeds
 /feeds.conf
-/files
 /overlay
 /package/feeds
 /package/openwrt-packages
 /*.patch
 /llvm-bpf*
 key-build*
-*.orig
-*.rej
 *~
 .#*
 *#
diff --git a/feeds.conf.default b/feeds.conf.default
index fc679335e0..4c03e92d72 100644
--- a/feeds.conf.default
+++ b/feeds.conf.default
@@ -1,7 +1,7 @@
-src-git packages https://git.openwrt.org/feed/packages.git
-src-git luci https://git.openwrt.org/project/luci.git
+src-git-full packages https://git.openwrt.org/feed/packages.git
+src-git-full luci https://git.openwrt.org/project/luci.git
 src-git routing https://git.openwrt.org/feed/routing.git
-src-git telephony https://git.openwrt.org/feed/telephony.git
+#src-git telephony https://git.openwrt.org/feed/telephony.git
 #src-git video https://github.com/openwrt/video.git
 #src-git targets https://github.com/openwrt/targets.git
 #src-git oldpackages http://git.openwrt.org/packages.git
diff --git a/files/etc/Compile_info.txt b/files/etc/Compile_info.txt
new file mode 100644
index 0000000000..b4f1e1dcfb
--- /dev/null
+++ b/files/etc/Compile_info.txt
@@ -0,0 +1,6 @@
+OpenWrt master r23201-4c5a9da869 / 2023-06-01 17:44
+---
+openwrt   2023-05-31 4c5a9da selinux-policy: update to 1.2.5
+luci      2023-05-31 c9c3959 luci-app-statistics: enhance tcpconns plu
+packages  2023-06-01 56de9f9 v2ray-geodata: Update to latest version
+routing   2023-05-27 593a514 Merge pull request #975 from ecsv/batadv-
diff --git a/files/etc/applyHNsettings.sh b/files/etc/applyHNsettings.sh
new file mode 100755
index 0000000000..d49760d772
--- /dev/null
+++ b/files/etc/applyHNsettings.sh
@@ -0,0 +1,11 @@
+#!/bin/sh
+cp -f $1 /tmp/HNsettings.cpt
+if [ "$?" -eq 0 ] ; then
+  ccdecrypt -vf /tmp/HNsettings.cpt
+  if [ "$?" -eq 0 ] ; then
+    tar -xzv -f /tmp/HNsettings -C /etc
+    chmod 744 /etc/dropbear/authorized_keys
+    sync
+  fi
+fi
+
diff --git a/files/etc/backup.stats/.placeholder b/files/etc/backup.stats/.placeholder
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/files/etc/checksettings.sh b/files/etc/checksettings.sh
new file mode 100755
index 0000000000..e7a1c42c19
--- /dev/null
+++ b/files/etc/checksettings.sh
@@ -0,0 +1,13 @@
+#!/bin/sh
+cd /etc/config
+for F in *
+do
+        echo
+        echo "===== $F ====="
+        uci -c /rom/etc/config export $F >/tmp/$F.default 2>/dev/null
+        case $? in 0) ;; *) echo '>> no default in /rom <<' ;; esac
+        uci export $F >/tmp/$F.current
+        diff -u /tmp/$F.default /tmp/$F.current
+        rm -f /tmp/$F.default /tmp/$F.current
+done
+
diff --git a/files/etc/config/fstab b/files/etc/config/fstab
new file mode 100644
index 0000000000..4bc3fdc594
--- /dev/null
+++ b/files/etc/config/fstab
@@ -0,0 +1,11 @@
+config 'global'
+	option anon_swap  '0'
+	option anon_mount '1'
+	option auto_swap  '1'
+	option auto_mount '1'
+	option delay_root '0'
+	option check_fs   '0'
+
+## use 'block detect' to find out uuid, if you want device specific mount.
+## anon_mount enables the automatic mounting of /dev/sdXy to /mnt/sdXy
+
diff --git a/files/etc/hotplug.d/ntp/20-ntpd-logger b/files/etc/hotplug.d/ntp/20-ntpd-logger
new file mode 100644
index 0000000000..7f1ff28f8b
--- /dev/null
+++ b/files/etc/hotplug.d/ntp/20-ntpd-logger
@@ -0,0 +1,4 @@
+#!/bin/sh
+[ $ACTION = "step" ]    && logger -t ntpd Time set, stratum=$stratum interval=$poll_interval offset=$offset
+[ $ACTION = "stratum" ] && logger -t ntpd Stratum change, stratum=$stratum interval=$poll_interval offset=$offset
+
diff --git a/files/etc/lan-repeater.sh b/files/etc/lan-repeater.sh
new file mode 100755
index 0000000000..088bdbb2d5
--- /dev/null
+++ b/files/etc/lan-repeater.sh
@@ -0,0 +1,28 @@
+#!/bin/sh
+uci set system.@system[0].hostname=router2
+uci set network.lan.ipaddr=192.168.1.2
+uci set network.lan.ip6ifaceid='::2'
+uci set network.lan.gateway=192.168.1.1
+uci set network.lan.dns=192.168.1.1
+uci set network.henet.auto=0
+uci set network.lan6=interface
+uci set network.lan6.ifname=@lan
+uci set network.lan6.proto=dhcpv6
+uci set network.lan6.reqprefix=no
+uci set wireless.@wifi-device[0].channel=48
+uci set wireless.@wifi-device[1].channel=9
+uci set dhcp.lan.ignore=1
+uci set dhcp.lan.force=0
+uci delete dhcp.lan.dhcpv6
+uci delete dhcp.lan.ra
+uci delete dhcp.lan.ndp
+uci set upnpd.config.enable_natpmp=0
+uci set upnpd.config.enable_upnp=0
+uci commit dhcp
+uci commit network
+uci commit wireless
+uci commit system
+uci commit upnpd
+/etc/init.d/dnsmasq disable
+/etc/init.d/miniupnpd disable
+
diff --git a/files/etc/profile.d/busybox-history-file.sh b/files/etc/profile.d/busybox-history-file.sh
new file mode 100644
index 0000000000..f286009627
--- /dev/null
+++ b/files/etc/profile.d/busybox-history-file.sh
@@ -0,0 +1,2 @@
+export HISTFILE=/tmp/.busybox_ash_history
+
diff --git a/files/etc/restoreStats.sh b/files/etc/restoreStats.sh
new file mode 100755
index 0000000000..ef205bd577
--- /dev/null
+++ b/files/etc/restoreStats.sh
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+/etc/init.d/collectd stop
+logger -t "LuCI statistics" collectd stopped, stats being restored
+mkdir -p /tmp/rrd/$(uname -n)
+cd /tmp/rrd/$(uname -n)
+tar x -zvf /etc/backup.stats/stats.tar.gz
+sync
+/etc/init.d/collectd start
diff --git a/files/etc/saveHNsettings.sh b/files/etc/saveHNsettings.sh
new file mode 100755
index 0000000000..a6696cd51c
--- /dev/null
+++ b/files/etc/saveHNsettings.sh
@@ -0,0 +1,13 @@
+#!/bin/sh
+cd /etc
+tar -czv -f /tmp/HNsettings \
+  config/network config/wireless config/firewall config/dhcp config/sqm \
+  config/luci_statistics config/bcp38 sysupgrade.conf \
+  dropbear/authorized_keys adblock/adblock.whitelist crontabs/root
+if [ "$?" -eq 0 ] ; then
+  ccencrypt -vf /tmp/HNsettings
+  if [ "$?" -eq 0 ] ; then
+    cp -f /tmp/HNsettings.cpt /etc/HNsettings.$1.cpt
+  fi
+fi
+
diff --git a/files/etc/storeStats.sh b/files/etc/storeStats.sh
new file mode 100755
index 0000000000..2c0a2451e6
--- /dev/null
+++ b/files/etc/storeStats.sh
@@ -0,0 +1,12 @@
+#!/bin/sh
+BACKUPNAME=stats-$(date +%Y%m%dT%H%M).tar.gz
+/etc/init.d/collectd stop
+logger -t "LuCI statistics" Create backup archive
+mkdir -p /etc/backup.stats
+cd /tmp/rrd/$(uname -n)
+tar c -zvf /etc/backup.stats/$BACKUPNAME *
+cd /etc/backup.stats
+ln -fs $BACKUPNAME stats.tar.gz
+sync
+/etc/init.d/collectd start
+
diff --git a/files/etc/wifi-suite.sh b/files/etc/wifi-suite.sh
new file mode 100755
index 0000000000..3b002ec409
--- /dev/null
+++ b/files/etc/wifi-suite.sh
@@ -0,0 +1,36 @@
+#!/bin/sh
+
+echo "Associated wifi stations' AKM suites:"
+cd /var/run/hostapd
+for socket in *; do
+  [ -S "$socket" ] || continue
+  [ "$socket" = "global" ] && continue
+  for assoc in $(hostapd_cli -i "$socket" list_sta); do
+    suite=$(hostapd_cli -i "$socket" sta "$assoc" | grep "AKMSuiteSelector" | cut -f 2 -d"=")
+    case "$suite" in
+        00-0f-ac-1) akm=802.1x  ;;
+        00-0f-ac-2) akm=WPA-PSK  ;;
+        00-0f-ac-3) akm=FT-802.1x  ;;
+        00-0f-ac-4) akm=WPA-PSK-FT  ;;
+        00-0f-ac-5) akm=802.1x-SHA256  ;;
+        00-0f-ac-6) akm=WPA-PSK-SHA256  ;;
+        00-0f-ac-7) akm=TDLS  ;;
+        00-0f-ac-8) akm=WPA3-SAE  ;;
+        00-0f-ac-9) akm=FT-SAE  ;;
+        00-0f-ac-10) akm=AP-PEER-KEY  ;;
+        00-0f-ac-11) akm=802.1x-suite-B  ;;
+        00-0f-ac-12) akm=802.1x-suite-B-192  ;;
+        00-0f-ac-13) akm=FT-802.1x-SHA384  ;;
+        00-0f-ac-14) akm=FILS-SHA256  ;;
+        00-0f-ac-15) akm=FILS-SHA384  ;;
+        00-0f-ac-16) akm=FT-FILS-SHA256  ;;
+        00-0f-ac-17) akm=FT-FILS-SHA384  ;;
+        00-0f-ac-18) akm=OWE  ;;
+        00-0f-ac-19) akm=FT-WPA2-PSK-SHA384  ;;
+        00-0f-ac-20) akm=WPA2-PSK-SHA384  ;;
+        *) akm="undefined" ;;
+    esac
+    echo "$socket: AKM suite of $assoc is $suite ($akm)"
+  done
+done
+
diff --git a/hnscripts/copyPackages2tmp.sh b/hnscripts/copyPackages2tmp.sh
new file mode 100755
index 0000000000..4222b2c6f0
--- /dev/null
+++ b/hnscripts/copyPackages2tmp.sh
@@ -0,0 +1,23 @@
+#!/bin/sh
+#
+# copyPackages2tmp  -  Copy packages to router's /tmp directory
+
+#create new /etc/opkg/customfeeds.conf with base, luci, packages, routing
+cat <<EOF >/tmp/customfeeds.conf
+src/gz TmpBase file:/tmp/arm_cortex-a15_neon-vfpv4/base
+src/gz TmpLuci file:/tmp/arm_cortex-a15_neon-vfpv4/luci
+src/gz TmpPackages file:/tmp/arm_cortex-a15_neon-vfpv4/packages
+src/gz TmpRouting file:/tmp/arm_cortex-a15_neon-vfpv4/routing
+src/gz TmpTarget file:/tmp/target
+EOF
+
+#copy packages
+echo "Copy packages..."
+scp -r bin/packages/arm_cortex-a15_neon-vfpv4 root@192.168.1.1:/tmp/
+scp -r bin/targets/ipq806x/generic/packages root@192.168.1.1:/tmp/target
+
+#copy and overwrite /etc/opkg/customfeeds.conf
+echo "Copy modified /etc/opkg/customfeeds.conf..."
+scp /tmp/customfeeds.conf root@192.168.1.1:/etc/opkg/customfeeds.conf
+echo "done."
+
diff --git a/hnscripts/createbuildinfo.sh b/hnscripts/createbuildinfo.sh
new file mode 100755
index 0000000000..c08766cc38
--- /dev/null
+++ b/hnscripts/createbuildinfo.sh
@@ -0,0 +1,65 @@
+#!/bin/sh
+#
+# createbuildinfo  -  Create info on current config and source code changes
+
+getGitInfo() {
+#params: directory patchfile infofile
+ echo "\n######################################################\n" >> $3
+ (cd $1
+  git diff HEAD > $2
+  git remote -v show | grep fetch >> $3
+  git branch --list >> $3
+  git show --format="%cd %h %s" --abbrev=7 --date=short | head -n 1 | cut -b1-60 >> $3
+  git status --porcelain >> $3
+ )
+}
+
+BinDir=$PWD/bin/targets/ipq806x/generic
+Device=R7800
+Prefix=openwrt-ipq806x-generic-netgear_r7800
+Branch=master
+
+VersTime=$Branch-$(scripts/getver.sh)-$(date +%Y%m%d-%H%M)
+TFile=$BinDir/$Device-$VersTime
+
+echo process $Branch...
+
+# cleanup old binaries & patches
+rm -f $BinDir/$Device-* $BinDir/ath10k-*
+
+# remove unnecessary files
+rm -f $BinDir/*root.img $BinDir/*vmlinux.elf $BinDir/*initramfs-uImage
+
+# create status info and patches
+echo "$VersTime" > $TFile-status.txt
+getGitInfo . $TFile-main.patch $TFile-status.txt
+getGitInfo feeds/luci $TFile-luci.patch $TFile-status.txt
+getGitInfo feeds/packages $TFile-packages.patch $TFile-status.txt
+#getGitInfo feeds/routing $TFile-routing.patch $TFile-status.txt
+sed -i -e 's/$/\r/' $TFile-status.txt
+
+# collect config info
+cp .config $TFile.config
+cp .config.init $TFile.config.init
+scripts/diffconfig.sh > $TFile.diffconfig.txt 2>/dev/null
+
+# copy buildroot creation script and patch timestamp info
+cp hnscripts/newBuildroot.sh $TFile-newBuildroot.sh
+sed -i "s/^FILESTAMP=.*/FILESTAMP=$Device-$VersTime/" $TFile-newBuildroot.sh
+
+# cleanup checksum files
+grep -sh $Prefix.*-squashfs $BinDir/md5sums $BinDir/sha256sums \
+  | sed -e 's/$/\r/' -e 's/\*'$Prefix'/'$Device'/' -e 's/squashfs-//' \
+  > $TFile-checksums.txt
+rm -f $BinDir/md5sums $BinDir/sha256sums
+
+# rename manifest and firmware files
+cd $BinDir
+mv *.manifest $Device-$VersTime-manifest.txt
+mv $Prefix-squashfs-sysupgrade.bin $Device-$VersTime-sysupgrade.bin
+mv $Prefix-squashfs-factory.img $Device-$VersTime-factory.img
+
+# copy ath10k ct+mainline kmods
+cp packages/kmod-ath10k_* ath10k-mainline-$VersTime.ipk
+cp packages/kmod-ath10k-ct_* ath10k-ct-$VersTime.ipk
+
diff --git a/hnscripts/kernelcompile.sh b/hnscripts/kernelcompile.sh
new file mode 100755
index 0000000000..8bf93a3a53
--- /dev/null
+++ b/hnscripts/kernelcompile.sh
@@ -0,0 +1,9 @@
+#!/bin/bash
+#
+# kernelcompile  -  Clean & compile kernel using a single thread. No update.
+
+echo "...make kernel..."
+make target/linux/clean
+mkdir -p logs
+make target/linux/compile V=s 2>&1 | tee logs/build.log | grep -i -E "^make.*(error|[12345]...Entering dir)"
+
diff --git a/hnscripts/mountNcopy.sh b/hnscripts/mountNcopy.sh
new file mode 100755
index 0000000000..e64ecc89fd
--- /dev/null
+++ b/hnscripts/mountNcopy.sh
@@ -0,0 +1,34 @@
+#!/bin/sh
+#
+# mount & copy  -  Mount the Virtualbox shared folder and copy files to PC
+
+Mounttype=vboxsf
+Mountname=PCSHARE
+Mountpoint=/media/windows-share
+BinDir=bin/targets/ipq806x/generic
+
+echo Check for existing mount of the shared folder $Mountpoint
+df | grep $Mountpoint
+if [ "$?" -ne 0 ]; then
+  echo Mounting $Mountpoint as $Mountname...
+  sudo mount -t $Mounttype $Mountname $Mountpoint
+  [ "$?" -ne 0 ] && echo "Sudo/mount failed." && exit 1
+fi
+
+echo "\nCopy from $PWD ..."
+cp $BinDir/*bin $Mountpoint
+sleep 2
+cp $BinDir/*img $Mountpoint
+sleep 2
+cp $BinDir/ath10k* $Mountpoint
+sleep 1
+cp $BinDir/*patch $Mountpoint
+sleep 1
+cp $BinDir/*sh $Mountpoint
+sleep 1
+cp $BinDir/*txt $Mountpoint
+sleep 1
+cp $BinDir/*config.init $Mountpoint
+cp $BinDir/*config $Mountpoint
+echo done.
+
diff --git a/hnscripts/newBuildroot.sh b/hnscripts/newBuildroot.sh
new file mode 100755
index 0000000000..6baf9bccb9
--- /dev/null
+++ b/hnscripts/newBuildroot.sh
@@ -0,0 +1,74 @@
+#!/bin/sh
+#
+# newBuildroot.sh
+#
+# Creates the build environment with the current directory as the root
+# To avoid problems with long paths, something like /Openwrt is preferable
+#
+# Script creates subdir for master (or the release branch), and dl for downloads
+# Creates main source repository and luci, packages & routing feeds
+
+### Target definitions
+TARGET=master
+GITREPO=https://git.openwrt.org/openwrt/openwrt.git
+
+## Current version
+FILESTAMP=R7800-master-r22602-42eeb22450-20230420-2155
+
+### Prerequisites for buildroot for the current Ubuntu
+sudo apt-get install build-essential libncurses5-dev zlib1g-dev
+sudo apt-get install gawk gcc-multilib flex git gettext libssl-dev
+sudo apt-get install python3-distutils
+
+### Prerequisites for being able to send patches to openwrt-devel
+sudo apt-get install git-email
+
+### Newly patched Ubuntu may not yet have the correct kernel headers.
+# sudo apt-get install linux-headers-$(uname -r)
+
+### set the preferred umask (allowed: 0000-0022)
+umask 0022
+
+### download directory (outside main directory to protect from make distclean)
+mkdir -p dl
+
+### main directory
+mkdir -p $TARGET
+
+### checkout/clone and change to directory
+git clone $GITREPO $TARGET
+cd $TARGET
+
+### create symlink to dl (after git clone)
+ln -s ../dl dl
+
+### patch main source first to set feeds correctly
+### update the feeds, apply patches to feeds
+### re-create index to find new packages, finally install
+patch -p1 -i ../$FILESTAMP-main.patch
+scripts/feeds update -a
+(cd feeds/luci;     patch -p1 -i ../../../$FILESTAMP-luci.patch)
+(cd feeds/packages; patch -p1 -i ../../../$FILESTAMP-packages.patch)
+#(cd feeds/routing;  patch -p1 -i ../../../$FILESTAMP-routing.patch)
+scripts/feeds update -i
+scripts/feeds install -a
+
+### chmod known script files executable
+chmod -f 755 files/etc/*.sh
+chmod -f 755 files/etc/rc.button/*
+
+### chmod buildscripts executable
+chmod -f 755 hnscripts/*.sh
+
+### add created/modified files in main repo to version control
+git add -f files
+git add -A
+
+### add created/modified files in feeds to version control
+(cd feeds/luci;     git add -A)
+(cd feeds/packages; git add -A)
+#(cd feeds/routing;  git add -A)
+
+### initialise .config
+cp .config.init .config
+
diff --git a/hnscripts/parallelcompile.sh b/hnscripts/parallelcompile.sh
new file mode 100755
index 0000000000..093c29dbea
--- /dev/null
+++ b/hnscripts/parallelcompile.sh
@@ -0,0 +1,14 @@
+#!/bin/bash
+#
+# parallelcompile  -  Compile using multiple threads
+
+echo "...create version info file..."
+hnscripts/timestampVersion.sh
+echo "...make world..."
+mkdir -p logs
+make -j 5 V=s 2>&1 | tee logs/build.log | grep -i -E "^make.*(error|[12345]...Entering dir)|^warning"
+[ ${PIPESTATUS[0]} -ne 0 ] && exit 1
+echo -n "...create build info: "
+hnscripts/createbuildinfo.sh
+echo done.
+
diff --git a/hnscripts/singlecompile.sh b/hnscripts/singlecompile.sh
new file mode 100755
index 0000000000..ac05bd6434
--- /dev/null
+++ b/hnscripts/singlecompile.sh
@@ -0,0 +1,14 @@
+#!/bin/bash
+#
+# singlecompile  -  Compile using a single thread. For debug
+
+echo "...create version info file..."
+hnscripts/timestampVersion.sh
+echo "...make world..."
+mkdir -p logs
+make V=s 2>&1 | tee logs/build.log | grep -i -E "^make.*(error|[12345]...Entering dir)|^warning"
+[ ${PIPESTATUS[0]} -ne 0 ] && exit 1
+echo -n "...create build info: "
+hnscripts/createbuildinfo.sh
+echo done.
+
diff --git a/hnscripts/timestampVersion.sh b/hnscripts/timestampVersion.sh
new file mode 100755
index 0000000000..4179ca24b0
--- /dev/null
+++ b/hnscripts/timestampVersion.sh
@@ -0,0 +1,19 @@
+#!/bin/bash
+#
+# timestampVersion  -  Collect source version info and insert it into firmware
+
+STATUSFILE=files/etc/Compile_info.txt
+Nickname=master
+
+echo OpenWrt $Nickname `scripts/getver.sh` / `date "+%F %H:%M"` > $STATUSFILE
+echo "---" >> $STATUSFILE
+echo "openwrt   $(git log -1 --format="%cd %h %s" --abbrev=7 --date=short | head -n 1 | cut -b1-60)" >> $STATUSFILE
+echo "luci      $(cd feeds/luci && git log -1 --format="%cd %h %s" --abbrev=7 --date=short | cut -b1-60)" >> $STATUSFILE
+echo "packages  $(cd feeds/packages && git log -1 --format="%cd %h %s" --abbrev=7 --date=short | cut -b1-60)" >> $STATUSFILE
+echo "routing   $(cd feeds/routing && git log -1 --format="%cd %h %s" --abbrev=7 --date=short | cut -b1-60)" >> $STATUSFILE
+cat $STATUSFILE
+git add $STATUSFILE
+
+# Override git/svn timestamp after r48583-48594, set initial clock to now
+date +%s > version.date
+
diff --git a/hnscripts/updateNmake.sh b/hnscripts/updateNmake.sh
new file mode 100755
index 0000000000..8eff1db078
--- /dev/null
+++ b/hnscripts/updateNmake.sh
@@ -0,0 +1,22 @@
+#!/bin/bash
+#
+# update & make  -  Update source code and continue to make the build
+
+umask 0022
+echo "...update main source..."
+git pull
+[ "$?" -ne 0 ] && echo "Updating the main OpenWrt source code failed." && exit 1
+echo "...update feeds..."
+./scripts/feeds update -a
+[ "$?" -ne 0 ] && echo "Updating the feeds failed." && exit 1
+echo "...install feeds..."
+./scripts/feeds install -a
+echo "...make defconfig..."
+make defconfig
+#echo "...make menuconfig..."
+#make menuconfig
+echo "...download new source packages..."
+make download
+echo "...make the firmware..."
+hnscripts/parallelcompile.sh
+
diff --git a/package/base-files/Makefile b/package/base-files/Makefile
index 8732f82fb9..7b38826c8a 100644
--- a/package/base-files/Makefile
+++ b/package/base-files/Makefile
@@ -77,7 +77,7 @@ endef
 define ImageConfigOptions
 	mkdir -p $(1)/lib/preinit
 	echo 'pi_suppress_stderr="$(CONFIG_TARGET_PREINIT_SUPPRESS_STDERR)"' >$(1)/lib/preinit/00_preinit.conf
-	echo 'fs_failsafe_wait_timeout=$(if $(CONFIG_TARGET_PREINIT_TIMEOUT),$(CONFIG_TARGET_PREINIT_TIMEOUT),2)' >>$(1)/lib/preinit/00_preinit.conf
+	echo 'fs_failsafe_wait_timeout=$(if $(CONFIG_TARGET_PREINIT_TIMEOUT),$(CONFIG_TARGET_PREINIT_TIMEOUT),4)' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_init_path="$(TARGET_INIT_PATH)"' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_init_env=$(if $(CONFIG_TARGET_INIT_ENV),$(CONFIG_TARGET_INIT_ENV),"")' >>$(1)/lib/preinit/00_preinit.conf
 	echo 'pi_init_cmd=$(if $(CONFIG_TARGET_INIT_CMD),$(CONFIG_TARGET_INIT_CMD),"/sbin/init")' >>$(1)/lib/preinit/00_preinit.conf
diff --git a/package/base-files/files/bin/config_generate b/package/base-files/files/bin/config_generate
index be21d0079a..dd67b11ea0 100755
--- a/package/base-files/files/bin/config_generate
+++ b/package/base-files/files/bin/config_generate
@@ -312,9 +312,10 @@ generate_static_system() {
 		delete system.@system[0]
 		add system system
 		set system.@system[-1].hostname='OpenWrt'
-		set system.@system[-1].timezone='UTC'
+		set system.@system[-1].timezone='EET-2EEST,M3.5.0/3,M10.5.0/4'
+		set system.@system[-1].zonename='Europe/Helsinki'
 		set system.@system[-1].ttylogin='0'
-		set system.@system[-1].log_size='64'
+		set system.@system[-1].log_size='192'
 		set system.@system[-1].urandom_seed='0'
 
 		delete system.ntp
diff --git a/package/base-files/files/etc/rc.button/reset b/package/base-files/files/etc/rc.button/reset
index 2403122ad2..5746ea237a 100755
--- a/package/base-files/files/etc/rc.button/reset
+++ b/package/base-files/files/etc/rc.button/reset
@@ -15,16 +15,8 @@ timeout)
 	set_state failsafe
 ;;
 released)
-	if [ "$SEEN" -lt 1 ]
-	then
-		echo "REBOOT" > /dev/console
-		sync
-		reboot
-	elif [ "$SEEN" -ge 5 -a -n "$OVERLAY" ]
-	then
 		echo "FACTORY RESET" > /dev/console
 		jffs2reset -y && reboot &
-	fi
 ;;
 esac
 
diff --git a/package/base-files/image-config.in b/package/base-files/image-config.in
index 2de2130b84..dee06e9b86 100644
--- a/package/base-files/image-config.in
+++ b/package/base-files/image-config.in
@@ -44,7 +44,7 @@ config TARGET_PREINIT_DISABLE_FAILSAFE
 config TARGET_PREINIT_TIMEOUT
 	int
 	prompt "Failsafe/Debug wait timeout" if PREINITOPT
-	default 2
+	default 4
 	help
 		How long to wait for failsafe mode to be entered or for
 		a debug option to be pressed before continuing with a
diff --git a/package/network/config/qosify/files/qosify.conf b/package/network/config/qosify/files/qosify.conf
index 7a3d0d068a..31abfb7274 100644
--- a/package/network/config/qosify/files/qosify.conf
+++ b/package/network/config/qosify/files/qosify.conf
@@ -27,8 +27,8 @@ config class voice
 config interface wan
 	option name wan
 	option disabled 1
-	option bandwidth_up 100mbit
-	option bandwidth_down 100mbit
+	option bandwidth_up 55mbit
+	option bandwidth_down 190mbit
 	option overhead_type none
 	# defaults:
 	option ingress 1
diff --git a/package/network/ipv6/6in4/files/6in4.sh b/package/network/ipv6/6in4/files/6in4.sh
index 5b5c7b36af..d75c6f4f41 100755
--- a/package/network/ipv6/6in4/files/6in4.sh
+++ b/package/network/ipv6/6in4/files/6in4.sh
@@ -25,7 +25,7 @@ test_6in4_rfc1918()
 
 proto_6in4_update() {
 	sh -c '
-		timeout=5
+		timeout=8
 
 		(while [ $((timeout--)) -gt 0 ]; do
 			sleep 1
diff --git a/package/network/services/hostapd/files/hostapd.sh b/package/network/services/hostapd/files/hostapd.sh
index 28bd210623..d0790061d5 100644
--- a/package/network/services/hostapd/files/hostapd.sh
+++ b/package/network/services/hostapd/files/hostapd.sh
@@ -810,6 +810,11 @@ hostapd_set_bss_options() {
 		set_default wps_manufacturer "www.openwrt.org"
 		set_default wps_independent 1
 
+		# Set WPS label pin to original Netgear value stored in art partition
+		# Value for wps_pin can be overridden by /etc/config/wireless
+#		local PINdefault="$(dd if=/dev/mtdblock3 bs=1 skip=18 count=8 2>/dev/null)"
+#		set_default wps_pin "$PINdefault"
+
 		wps_state=2
 		[ -n "$wps_not_configured" ] && wps_state=1
 
@@ -898,7 +903,7 @@ hostapd_set_bss_options() {
 
 			set_default mobility_domain "$(echo "$ssid" | md5sum | head -c 4)"
 			set_default ft_over_ds 0
-			set_default reassociation_deadline 1000
+			set_default reassociation_deadline 20000
 
 			case "$auth_type" in
 				psk|sae|psk-sae)
diff --git a/package/network/services/hostapd/files/wps-hotplug.sh b/package/network/services/hostapd/files/wps-hotplug.sh
index 073bdd1868..dc05718eb7 100644
--- a/package/network/services/hostapd/files/wps-hotplug.sh
+++ b/package/network/services/hostapd/files/wps-hotplug.sh
@@ -39,6 +39,7 @@ wps_catch_credentials() {
 }
 
 if [ "$ACTION" = "released" ] && [ "$BUTTON" = "wps" ]; then
+	logger "WPS button pressed, looking for active radios"
 	# If the button was pressed for 3 seconds or more, trigger WPS on
 	# wpa_supplicant only, no matter if hostapd is running or not.  If
 	# was pressed for less than 3 seconds, try triggering on
diff --git a/package/network/services/odhcpd/files/odhcpd-update b/package/network/services/odhcpd/files/odhcpd-update
index c1814e00b0..b2f92bf10d 100755
--- a/package/network/services/odhcpd/files/odhcpd-update
+++ b/package/network/services/odhcpd/files/odhcpd-update
@@ -1,6 +1,8 @@
 #!/bin/sh
 # Make dnsmasq reread hostfile by sending SIGHUP signal
 
+logger -t odhcpd "*** ODHCPD triggers DNSMASQ reload ***"
+
 . /lib/functions/procd.sh
 
 procd_send_signal dnsmasq
diff --git a/target/linux/ipq806x/base-files/etc/init.d/cpufreq b/target/linux/ipq806x/base-files/etc/init.d/cpufreq
index 19278902ed..b61824c877 100755
--- a/target/linux/ipq806x/base-files/etc/init.d/cpufreq
+++ b/target/linux/ipq806x/base-files/etc/init.d/cpufreq
@@ -11,7 +11,7 @@ boot() {
     # Effective only with ondemand
     echo 600000 > /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq
     echo 600000 > /sys/devices/system/cpu/cpufreq/policy1/scaling_min_freq
-    echo 10 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
+    echo 20 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
     echo 50 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
   fi
 }
diff --git a/target/linux/ipq806x/config-5.15 b/target/linux/ipq806x/config-5.15
index 286f327e39..720e3236a3 100644
--- a/target/linux/ipq806x/config-5.15
+++ b/target/linux/ipq806x/config-5.15
@@ -35,8 +35,8 @@ CONFIG_ARM_CPU_SUSPEND=y
 CONFIG_ARM_CRYPTO=y
 CONFIG_ARM_GIC=y
 CONFIG_ARM_HAS_SG_CHAIN=y
-# CONFIG_ARM_IPQ806X_FAB_DEVFREQ is not set
-# CONFIG_ARM_KRAIT_CACHE_DEVFREQ is not set
+CONFIG_ARM_IPQ806X_FAB_DEVFREQ=y
+CONFIG_ARM_KRAIT_CACHE_DEVFREQ=y
 CONFIG_ARM_L1_CACHE_SHIFT=6
 CONFIG_ARM_L1_CACHE_SHIFT_6=y
 CONFIG_ARM_PATCH_IDIV=y
diff --git a/target/linux/ipq806x/patches-5.15/122-02-clk-qcom-krait-cc-register-REAL-qsb-fixed-clock.patch b/target/linux/ipq806x/patches-5.15/122-02-clk-qcom-krait-cc-register-REAL-qsb-fixed-clock.patch
deleted file mode 100644
index e2f78f79fb..0000000000
--- a/target/linux/ipq806x/patches-5.15/122-02-clk-qcom-krait-cc-register-REAL-qsb-fixed-clock.patch
+++ /dev/null
@@ -1,36 +0,0 @@
-From fca6f185a9d9ef0892a719bc6da955b22d326ec7 Mon Sep 17 00:00:00 2001
-From: Christian Marangi <ansuelsmth@gmail.com>
-Date: Thu, 15 Sep 2022 02:24:33 +0200
-Subject: [PATCH 4/9] clk: qcom: krait-cc: register REAL qsb fixed clock
-
-With some tools it was discovered the real frequency of the qsb fixed
-clock. While not 100% correct it's still better than using 1 as a dummy
-frequency.
-Correctly register the qsb fixed clock with the frequency of 225 MHz
-instead of 1.
-
-Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
----
- drivers/clk/qcom/krait-cc.c | 8 +++++---
- 1 file changed, 5 insertions(+), 3 deletions(-)
-
---- a/drivers/clk/qcom/krait-cc.c
-+++ b/drivers/clk/qcom/krait-cc.c
-@@ -25,6 +25,8 @@ enum {
- 	clks_max,
- };
- 
-+#define QSB_RATE	2250000000
-+
- static unsigned int sec_mux_map[] = {
- 	2,
- 	0,
-@@ -364,7 +366,7 @@ static int krait_cc_probe(struct platfor
- 	 */
- 	clk = clk_get(dev, "qsb");
- 	if (IS_ERR(clk))
--		clk = clk_register_fixed_rate(dev, "qsb", NULL, 0, 1);
-+		clk = clk_register_fixed_rate(dev, "qsb", NULL, 0, QSB_RATE);
- 	if (IS_ERR(clk))
- 		return PTR_ERR(clk);
- 
diff --git a/target/linux/ipq806x/patches-5.15/122-03-clk-qcom-krait-cc-drop-pr_info-and-use-dev_info.patch b/target/linux/ipq806x/patches-5.15/122-03-clk-qcom-krait-cc-drop-pr_info-and-use-dev_info.patch
deleted file mode 100644
index d95a63fc44..0000000000
--- a/target/linux/ipq806x/patches-5.15/122-03-clk-qcom-krait-cc-drop-pr_info-and-use-dev_info.patch
+++ /dev/null
@@ -1,44 +0,0 @@
-From 2399d181557d94ae9a2686926cd25768f132e4b4 Mon Sep 17 00:00:00 2001
-From: Christian Marangi <ansuelsmth@gmail.com>
-Date: Fri, 18 Mar 2022 16:12:14 +0100
-Subject: [PATCH 7/9] clk: qcom: krait-cc: drop pr_info and use dev_info
-
-Replace pr_info() with dev_info() to provide better diagnostics.
-
-Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
----
- drivers/clk/qcom/krait-cc.c | 8 ++++----
- 1 file changed, 4 insertions(+), 4 deletions(-)
-
---- a/drivers/clk/qcom/krait-cc.c
-+++ b/drivers/clk/qcom/krait-cc.c
-@@ -423,25 +423,25 @@ static int krait_cc_probe(struct platfor
- 	cur_rate = clk_get_rate(clks[l2_mux]);
- 	aux_rate = 384000000;
- 	if (cur_rate < aux_rate) {
--		pr_info("L2 @ Undefined rate. Forcing new rate.\n");
-+		dev_info(dev, "L2 @ Undefined rate. Forcing new rate.\n");
- 		cur_rate = aux_rate;
- 	}
- 	clk_set_rate(clks[l2_mux], aux_rate);
- 	clk_set_rate(clks[l2_mux], 2);
- 	clk_set_rate(clks[l2_mux], cur_rate);
--	pr_info("L2 @ %lu KHz\n", clk_get_rate(clks[l2_mux]) / 1000);
-+	dev_info(dev, "L2 @ %lu KHz\n", clk_get_rate(clks[l2_mux]) / 1000);
- 	for_each_possible_cpu(cpu) {
- 		clk = clks[cpu];
- 		cur_rate = clk_get_rate(clk);
- 		if (cur_rate < aux_rate) {
--			pr_info("CPU%d @ Undefined rate. Forcing new rate.\n", cpu);
-+			dev_info(dev, "CPU%d @ Undefined rate. Forcing new rate.\n", cpu);
- 			cur_rate = aux_rate;
- 		}
- 
- 		clk_set_rate(clk, aux_rate);
- 		clk_set_rate(clk, 2);
- 		clk_set_rate(clk, cur_rate);
--		pr_info("CPU%d @ %lu KHz\n", cpu, clk_get_rate(clk) / 1000);
-+		dev_info(dev, "CPU%d @ %lu KHz\n", cpu, clk_get_rate(clk) / 1000);
- 	}
- 
- 	of_clk_add_provider(dev->of_node, krait_of_get, clks);
diff --git a/target/linux/ipq806x/patches-5.15/122-04-clk-qcom-krait-cc-rework-mux-reset-logic-and-reset-h.patch b/target/linux/ipq806x/patches-5.15/122-04-clk-qcom-krait-cc-rework-mux-reset-logic-and-reset-h.patch
deleted file mode 100644
index 8f88e06991..0000000000
--- a/target/linux/ipq806x/patches-5.15/122-04-clk-qcom-krait-cc-rework-mux-reset-logic-and-reset-h.patch
+++ /dev/null
@@ -1,88 +0,0 @@
-From 6a77cf3f5f95ec0058e1b4d1ada018748cb0b83b Mon Sep 17 00:00:00 2001
-From: Christian Marangi <ansuelsmth@gmail.com>
-Date: Thu, 15 Sep 2022 03:33:13 +0200
-Subject: [PATCH 9/9] clk: qcom: krait-cc: rework mux reset logic and reset
- hfpll
-
-Rework and clean mux reset logic.
-Compact it to a for loop to handle both CPU and L2 in one place.
-Move hardcoded aux_rate to define and add a new hfpll_rate value to
-reset hfpll settings.
-Change logic to now reset the hfpll to the lowest value of 600 Mhz and
-then restoring the previous frequency. This permits to reset the hfpll if
-the primary mux was set to source out of the secondary mux.
-
-Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
----
- drivers/clk/qcom/krait-cc.c | 50 +++++++++++++++++--------------------
- 1 file changed, 23 insertions(+), 27 deletions(-)
-
---- a/drivers/clk/qcom/krait-cc.c
-+++ b/drivers/clk/qcom/krait-cc.c
-@@ -25,7 +25,9 @@ enum {
- 	clks_max,
- };
- 
--#define QSB_RATE	2250000000
-+#define QSB_RATE	225000000
-+#define AUX_RATE	384000000
-+#define HFPLL_RATE	600000000
- 
- static unsigned int sec_mux_map[] = {
- 	2,
-@@ -350,7 +352,7 @@ static int krait_cc_probe(struct platfor
- {
- 	struct device *dev = &pdev->dev;
- 	const struct of_device_id *id;
--	unsigned long cur_rate, aux_rate, qsb_rate;
-+	unsigned long cur_rate, qsb_rate;
- 	int cpu;
- 	struct clk_hw *mux, *l2_pri_mux;
- 	struct clk *clk, **clks;
-@@ -420,28 +422,29 @@ static int krait_cc_probe(struct platfor
- 	 * two different rates to force a HFPLL reinit under all
- 	 * circumstances.
- 	 */
--	cur_rate = clk_get_rate(clks[l2_mux]);
--	aux_rate = 384000000;
--	if (cur_rate < aux_rate) {
--		dev_info(dev, "L2 @ Undefined rate. Forcing new rate.\n");
--		cur_rate = aux_rate;
--	}
--	clk_set_rate(clks[l2_mux], aux_rate);
--	clk_set_rate(clks[l2_mux], 2);
--	clk_set_rate(clks[l2_mux], cur_rate);
--	dev_info(dev, "L2 @ %lu KHz\n", clk_get_rate(clks[l2_mux]) / 1000);
--	for_each_possible_cpu(cpu) {
-+	for (cpu = 0; cpu < 5; cpu++) {
-+		const char *l2_s = "L2";
-+		char cpu_s[5];
-+
- 		clk = clks[cpu];
-+		if (!clk)
-+			continue;
-+
-+		if (cpu < 4)
-+			snprintf(cpu_s, 5, "CPU%d", cpu);
-+
- 		cur_rate = clk_get_rate(clk);
--		if (cur_rate < aux_rate) {
--			dev_info(dev, "CPU%d @ Undefined rate. Forcing new rate.\n", cpu);
--			cur_rate = aux_rate;
-+		if (cur_rate < AUX_RATE) {
-+			dev_info(dev, "%s @ Undefined rate. Forcing new rate.\n",
-+				 cpu < 4 ? cpu_s : l2_s);
-+			cur_rate = AUX_RATE;
- 		}
- 
--		clk_set_rate(clk, aux_rate);
--		clk_set_rate(clk, 2);
-+		clk_set_rate(clk, AUX_RATE);
-+		clk_set_rate(clk, HFPLL_RATE);
- 		clk_set_rate(clk, cur_rate);
--		dev_info(dev, "CPU%d @ %lu KHz\n", cpu, clk_get_rate(clk) / 1000);
-+		dev_info(dev, "%s @ %lu KHz\n", cpu < 4 ? cpu_s : l2_s,
-+			 clk_get_rate(clk) / 1000);
- 	}
- 
- 	of_clk_add_provider(dev->of_node, krait_of_get, clks);
diff --git a/target/linux/ipq806x/patches-5.15/122-05-clk-qcom-clk-krait-generilize-div-functions.patch b/target/linux/ipq806x/patches-5.15/122-05-clk-qcom-clk-krait-generilize-div-functions.patch
deleted file mode 100644
index a7c0f046c8..0000000000
--- a/target/linux/ipq806x/patches-5.15/122-05-clk-qcom-clk-krait-generilize-div-functions.patch
+++ /dev/null
@@ -1,156 +0,0 @@
-From 908c361b3c3a139eb3e6a798cb620a6da7514d5c Mon Sep 17 00:00:00 2001
-From: Christian Marangi <ansuelsmth@gmail.com>
-Date: Fri, 23 Sep 2022 19:05:39 +0200
-Subject: [PATCH 2/4] clk: qcom: clk-krait: generilize div functions
-
-Generilize div functions and remove hardcode to a divisor of 2.
-This is just a cleanup and permit to make it more clear the settings of
-the devisor when used by the krait-cc driver.
-
-Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
----
- drivers/clk/qcom/clk-krait.c | 57 ++++++++++++++++++++----------------
- drivers/clk/qcom/clk-krait.h | 11 ++++---
- drivers/clk/qcom/krait-cc.c  |  7 +++--
- 3 files changed, 42 insertions(+), 33 deletions(-)
-
---- a/drivers/clk/qcom/clk-krait.c
-+++ b/drivers/clk/qcom/clk-krait.c
-@@ -97,53 +97,58 @@ const struct clk_ops krait_mux_clk_ops =
- EXPORT_SYMBOL_GPL(krait_mux_clk_ops);
- 
- /* The divider can divide by 2, 4, 6 and 8. But we only really need div-2. */
--static long krait_div2_round_rate(struct clk_hw *hw, unsigned long rate,
-+static long krait_div_round_rate(struct clk_hw *hw, unsigned long rate,
- 				  unsigned long *parent_rate)
- {
--	*parent_rate = clk_hw_round_rate(clk_hw_get_parent(hw), rate * 2);
--	return DIV_ROUND_UP(*parent_rate, 2);
-+	struct krait_div_clk *d = to_krait_div_clk(hw);
-+
-+	*parent_rate = clk_hw_round_rate(clk_hw_get_parent(hw),
-+					 rate * d->divisor);
-+
-+	return DIV_ROUND_UP(*parent_rate, d->divisor);
- }
- 
--static int krait_div2_set_rate(struct clk_hw *hw, unsigned long rate,
-+static int krait_div_set_rate(struct clk_hw *hw, unsigned long rate,
- 			       unsigned long parent_rate)
- {
--	struct krait_div2_clk *d = to_krait_div2_clk(hw);
-+	struct krait_div_clk *d = to_krait_div_clk(hw);
-+	u8 div_val = krait_div_to_val(d->divisor);
- 	unsigned long flags;
--	u32 val;
--	u32 mask = BIT(d->width) - 1;
--
--	if (d->lpl)
--		mask = mask << (d->shift + LPL_SHIFT) | mask << d->shift;
--	else
--		mask <<= d->shift;
-+	u32 regval;
- 
- 	spin_lock_irqsave(&krait_clock_reg_lock, flags);
--	val = krait_get_l2_indirect_reg(d->offset);
--	val &= ~mask;
--	krait_set_l2_indirect_reg(d->offset, val);
-+	regval = krait_get_l2_indirect_reg(d->offset);
-+
-+	regval &= ~(d->mask << d->shift);
-+	regval |= (div_val & d->mask) << d->shift;
-+
-+	if (d->lpl) {
-+		regval &= ~(d->mask << (d->shift + LPL_SHIFT));
-+		regval |= (div_val & d->mask) << (d->shift + LPL_SHIFT);
-+	}
-+
-+	krait_set_l2_indirect_reg(d->offset, regval);
- 	spin_unlock_irqrestore(&krait_clock_reg_lock, flags);
- 
- 	return 0;
- }
- 
- static unsigned long
--krait_div2_recalc_rate(struct clk_hw *hw, unsigned long parent_rate)
-+krait_div_recalc_rate(struct clk_hw *hw, unsigned long parent_rate)
- {
--	struct krait_div2_clk *d = to_krait_div2_clk(hw);
--	u32 mask = BIT(d->width) - 1;
-+	struct krait_div_clk *d = to_krait_div_clk(hw);
- 	u32 div;
- 
- 	div = krait_get_l2_indirect_reg(d->offset);
- 	div >>= d->shift;
--	div &= mask;
--	div = (div + 1) * 2;
-+	div &= d->mask;
- 
--	return DIV_ROUND_UP(parent_rate, div);
-+	return DIV_ROUND_UP(parent_rate, krait_val_to_div(div));
- }
- 
--const struct clk_ops krait_div2_clk_ops = {
--	.round_rate = krait_div2_round_rate,
--	.set_rate = krait_div2_set_rate,
--	.recalc_rate = krait_div2_recalc_rate,
-+const struct clk_ops krait_div_clk_ops = {
-+	.round_rate = krait_div_round_rate,
-+	.set_rate = krait_div_set_rate,
-+	.recalc_rate = krait_div_recalc_rate,
- };
--EXPORT_SYMBOL_GPL(krait_div2_clk_ops);
-+EXPORT_SYMBOL_GPL(krait_div_clk_ops);
---- a/drivers/clk/qcom/clk-krait.h
-+++ b/drivers/clk/qcom/clk-krait.h
-@@ -25,17 +25,20 @@ struct krait_mux_clk {
- 
- extern const struct clk_ops krait_mux_clk_ops;
- 
--struct krait_div2_clk {
-+struct krait_div_clk {
- 	u32		offset;
--	u8		width;
-+	u32		mask;
-+	u8		divisor;
- 	u32		shift;
- 	bool		lpl;
- 
- 	struct clk_hw	hw;
- };
- 
--#define to_krait_div2_clk(_hw) container_of(_hw, struct krait_div2_clk, hw)
-+#define to_krait_div_clk(_hw) container_of(_hw, struct krait_div_clk, hw)
-+#define krait_div_to_val(_div)		((_div) / 2) - 1
-+#define krait_val_to_div(_val)		((_val) + 1) * 2
- 
--extern const struct clk_ops krait_div2_clk_ops;
-+extern const struct clk_ops krait_div_clk_ops;
- 
- #endif
---- a/drivers/clk/qcom/krait-cc.c
-+++ b/drivers/clk/qcom/krait-cc.c
-@@ -86,11 +86,11 @@ static int krait_notifier_register(struc
- static struct clk_hw *
- krait_add_div(struct device *dev, int id, const char *s, unsigned int offset)
- {
--	struct krait_div2_clk *div;
-+	struct krait_div_clk *div;
- 	static struct clk_parent_data p_data[1];
- 	struct clk_init_data init = {
- 		.num_parents = ARRAY_SIZE(p_data),
--		.ops = &krait_div2_clk_ops,
-+		.ops = &krait_div_clk_ops,
- 		.flags = CLK_SET_RATE_PARENT,
- 	};
- 	struct clk_hw *clk;
-@@ -101,7 +101,8 @@ krait_add_div(struct device *dev, int id
- 	if (!div)
- 		return ERR_PTR(-ENOMEM);
- 
--	div->width = 2;
-+	div->mask = 0x3;
-+	div->divisor = 2;
- 	div->shift = 6;
- 	div->lpl = id >= 0;
- 	div->offset = offset;
diff --git a/target/linux/ipq806x/patches-5.15/122-v6.2-clk-qcom-krait-cc-fix-wrong-pointer-passed-to-IS_ERR.patch b/target/linux/ipq806x/patches-5.15/122-v6.2-clk-qcom-krait-cc-fix-wrong-pointer-passed-to-IS_ERR.patch
new file mode 100644
index 0000000000..660233e637
--- /dev/null
+++ b/target/linux/ipq806x/patches-5.15/122-v6.2-clk-qcom-krait-cc-fix-wrong-pointer-passed-to-IS_ERR.patch
@@ -0,0 +1,33 @@
+From 3b36713d69d99318592d261eaca9b7460313c8c2 Mon Sep 17 00:00:00 2001
+From: Yang Yingliang <yangyingliang@huawei.com>
+Date: Wed, 4 Jan 2023 16:02:35 +0800
+Subject: [PATCH] clk: qcom: krait-cc: fix wrong pointer passed to IS_ERR()
+
+It should be 'mux' passed to IS_ERR/PTR_ERR().
+
+Fixes: 56a655e1c41a ("clk: qcom: krait-cc: convert to parent_data API")
+Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
+Signed-off-by: Bjorn Andersson <andersson@kernel.org>
+Link: https://lore.kernel.org/r/20230104080235.1748953-1-yangyingliang@huawei.com
+---
+ drivers/clk/qcom/krait-cc.c | 4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+diff --git a/drivers/clk/qcom/krait-cc.c b/drivers/clk/qcom/krait-cc.c
+index 2f9287c263ec..410ae8390f1c 100644
+--- a/drivers/clk/qcom/krait-cc.c
++++ b/drivers/clk/qcom/krait-cc.c
+@@ -376,8 +376,8 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 
+ 	for_each_possible_cpu(cpu) {
+ 		mux = krait_add_clks(dev, cpu, id->data);
+-		if (IS_ERR(clk))
+-			return PTR_ERR(clk);
++		if (IS_ERR(mux))
++			return PTR_ERR(mux);
+ 		clks[cpu] = mux->clk;
+ 	}
+ 
+-- 
+2.39.2
+
diff --git a/target/linux/ipq806x/patches-5.15/999-01-clk-qcom-krait-cc-move-mux-clks-to-local-static-stru.patch b/target/linux/ipq806x/patches-5.15/999-01-clk-qcom-krait-cc-move-mux-clks-to-local-static-stru.patch
new file mode 100644
index 0000000000..18dfae392a
--- /dev/null
+++ b/target/linux/ipq806x/patches-5.15/999-01-clk-qcom-krait-cc-move-mux-clks-to-local-static-stru.patch
@@ -0,0 +1,249 @@
+From 0011f11e0be8030ed059404358bf0b395897fdfa Mon Sep 17 00:00:00 2001
+From: Christian Marangi <ansuelsmth@gmail.com>
+Date: Sun, 16 Apr 2023 19:12:21 +0200
+Subject: [PATCH 1/3] clk: qcom: krait-cc: move mux clks to local static struct
+
+Move mux clks to local static struct.
+
+Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
+---
+ drivers/clk/qcom/krait-cc.c | 82 ++++++++++++++++++-------------------
+ 1 file changed, 39 insertions(+), 43 deletions(-)
+
+diff --git a/drivers/clk/qcom/krait-cc.c b/drivers/clk/qcom/krait-cc.c
+index 410ae8390f1c..83c72364e89d 100644
+--- a/drivers/clk/qcom/krait-cc.c
++++ b/drivers/clk/qcom/krait-cc.c
+@@ -25,6 +25,13 @@ enum {
+ 	clks_max,
+ };
+ 
++struct krait_cc_clk {
++	struct clk *clk;
++	struct krait_mux_clk pri_mux;
++	struct krait_mux_clk sec_mux;
++	struct krait_div2_clk div;
++};
++
+ static unsigned int sec_mux_map[] = {
+ 	2,
+ 	0,
+@@ -36,6 +43,8 @@ static unsigned int pri_mux_map[] = {
+ 	0,
+ };
+ 
++static struct krait_cc_clk krait_cc_clks[clks_max];
++
+ /*
+  * Notifier function for switching the muxes to safe parent
+  * while the hfpll is getting reprogrammed.
+@@ -80,9 +89,10 @@ static int krait_notifier_register(struct device *dev, struct clk *clk,
+ }
+ 
+ static struct clk_hw *
+-krait_add_div(struct device *dev, int id, const char *s, unsigned int offset)
++krait_add_div(struct device *dev, struct krait_cc_clk *krait_cc,
++	      int id, const char *s, unsigned int offset)
+ {
+-	struct krait_div2_clk *div;
++	struct krait_div2_clk *div = &krait_cc->div;
+ 	static struct clk_parent_data p_data[1];
+ 	struct clk_init_data init = {
+ 		.num_parents = ARRAY_SIZE(p_data),
+@@ -93,10 +103,6 @@ krait_add_div(struct device *dev, int id, const char *s, unsigned int offset)
+ 	char *parent_name;
+ 	int cpu, ret;
+ 
+-	div = devm_kzalloc(dev, sizeof(*div), GFP_KERNEL);
+-	if (!div)
+-		return ERR_PTR(-ENOMEM);
+-
+ 	div->width = 2;
+ 	div->shift = 6;
+ 	div->lpl = id >= 0;
+@@ -141,11 +147,12 @@ krait_add_div(struct device *dev, int id, const char *s, unsigned int offset)
+ }
+ 
+ static struct clk_hw *
+-krait_add_sec_mux(struct device *dev, int id, const char *s,
++krait_add_sec_mux(struct device *dev, struct krait_cc_clk *krait_cc,
++		  int id, const char *s,
+ 		  unsigned int offset, bool unique_aux)
+ {
+ 	int cpu, ret;
+-	struct krait_mux_clk *mux;
++	struct krait_mux_clk *mux = &krait_cc->sec_mux;
+ 	static struct clk_parent_data sec_mux_list[2] = {
+ 		{ .name = "qsb", .fw_name = "qsb" },
+ 		{},
+@@ -159,10 +166,6 @@ krait_add_sec_mux(struct device *dev, int id, const char *s,
+ 	struct clk_hw *clk;
+ 	char *parent_name;
+ 
+-	mux = devm_kzalloc(dev, sizeof(*mux), GFP_KERNEL);
+-	if (!mux)
+-		return ERR_PTR(-ENOMEM);
+-
+ 	mux->offset = offset;
+ 	mux->lpl = id >= 0;
+ 	mux->mask = 0x3;
+@@ -225,11 +228,12 @@ krait_add_sec_mux(struct device *dev, int id, const char *s,
+ }
+ 
+ static struct clk_hw *
+-krait_add_pri_mux(struct device *dev, struct clk_hw *hfpll_div, struct clk_hw *sec_mux,
++krait_add_pri_mux(struct device *dev, struct krait_cc_clk *krait_cc,
++		  struct clk_hw *hfpll_div, struct clk_hw *sec_mux,
+ 		  int id, const char *s, unsigned int offset)
+ {
+ 	int ret;
+-	struct krait_mux_clk *mux;
++	struct krait_mux_clk *mux = &krait_cc->pri_mux;
+ 	static struct clk_parent_data p_data[3];
+ 	struct clk_init_data init = {
+ 		.parent_data = p_data,
+@@ -240,10 +244,6 @@ krait_add_pri_mux(struct device *dev, struct clk_hw *hfpll_div, struct clk_hw *s
+ 	struct clk_hw *clk;
+ 	char *hfpll_name;
+ 
+-	mux = devm_kzalloc(dev, sizeof(*mux), GFP_KERNEL);
+-	if (!mux)
+-		return ERR_PTR(-ENOMEM);
+-
+ 	mux->mask = 0x3;
+ 	mux->shift = 0;
+ 	mux->offset = offset;
+@@ -288,7 +288,8 @@ krait_add_pri_mux(struct device *dev, struct clk_hw *hfpll_div, struct clk_hw *s
+ }
+ 
+ /* id < 0 for L2, otherwise id == physical CPU number */
+-static struct clk_hw *krait_add_clks(struct device *dev, int id, bool unique_aux)
++static struct clk_hw *krait_add_clks(struct device *dev, struct krait_cc_clk *krait_cc,
++				     int id, bool unique_aux)
+ {
+ 	struct clk_hw *hfpll_div, *sec_mux, *pri_mux;
+ 	unsigned int offset;
+@@ -305,19 +306,19 @@ static struct clk_hw *krait_add_clks(struct device *dev, int id, bool unique_aux
+ 		s = "_l2";
+ 	}
+ 
+-	hfpll_div = krait_add_div(dev, id, s, offset);
++	hfpll_div = krait_add_div(dev, krait_cc, id, s, offset);
+ 	if (IS_ERR(hfpll_div)) {
+ 		pri_mux = hfpll_div;
+ 		goto err;
+ 	}
+ 
+-	sec_mux = krait_add_sec_mux(dev, id, s, offset, unique_aux);
++	sec_mux = krait_add_sec_mux(dev, krait_cc, id, s, offset, unique_aux);
+ 	if (IS_ERR(sec_mux)) {
+ 		pri_mux = sec_mux;
+ 		goto err;
+ 	}
+ 
+-	pri_mux = krait_add_pri_mux(dev, hfpll_div, sec_mux, id, s, offset);
++	pri_mux = krait_add_pri_mux(dev, krait_cc, hfpll_div, sec_mux, id, s, offset);
+ 
+ err:
+ 	kfree(p);
+@@ -327,14 +328,14 @@ static struct clk_hw *krait_add_clks(struct device *dev, int id, bool unique_aux
+ static struct clk *krait_of_get(struct of_phandle_args *clkspec, void *data)
+ {
+ 	unsigned int idx = clkspec->args[0];
+-	struct clk **clks = data;
++	struct krait_cc_clk *clks = data;
+ 
+ 	if (idx >= clks_max) {
+ 		pr_err("%s: invalid clock index %d\n", __func__, idx);
+ 		return ERR_PTR(-EINVAL);
+ 	}
+ 
+-	return clks[idx] ? : ERR_PTR(-ENODEV);
++	return clks[idx].clk ? : ERR_PTR(-ENODEV);
+ }
+ 
+ static const struct of_device_id krait_cc_match_table[] = {
+@@ -351,7 +352,7 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 	unsigned long cur_rate, aux_rate;
+ 	int cpu;
+ 	struct clk_hw *mux, *l2_pri_mux;
+-	struct clk *clk, **clks;
++	struct clk *clk;
+ 
+ 	id = of_match_device(krait_cc_match_table, dev);
+ 	if (!id)
+@@ -369,22 +370,17 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 			return PTR_ERR(clk);
+ 	}
+ 
+-	/* Krait configurations have at most 4 CPUs and one L2 */
+-	clks = devm_kcalloc(dev, clks_max, sizeof(*clks), GFP_KERNEL);
+-	if (!clks)
+-		return -ENOMEM;
+-
+ 	for_each_possible_cpu(cpu) {
+-		mux = krait_add_clks(dev, cpu, id->data);
++		mux = krait_add_clks(dev, &krait_cc_clks[cpu], cpu, id->data);
+ 		if (IS_ERR(mux))
+ 			return PTR_ERR(mux);
+-		clks[cpu] = mux->clk;
++		krait_cc_clks[cpu].clk = mux->clk;
+ 	}
+ 
+-	l2_pri_mux = krait_add_clks(dev, -1, id->data);
++	l2_pri_mux = krait_add_clks(dev, &krait_cc_clks[l2_mux], -1, id->data);
+ 	if (IS_ERR(l2_pri_mux))
+ 		return PTR_ERR(l2_pri_mux);
+-	clks[l2_mux] = l2_pri_mux->clk;
++	krait_cc_clks[l2_mux].clk = l2_pri_mux->clk;
+ 
+ 	/*
+ 	 * We don't want the CPU or L2 clocks to be turned off at late init
+@@ -394,8 +390,8 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 	 * they take over.
+ 	 */
+ 	for_each_online_cpu(cpu) {
+-		clk_prepare_enable(clks[l2_mux]);
+-		WARN(clk_prepare_enable(clks[cpu]),
++		clk_prepare_enable(krait_cc_clks[l2_mux].clk);
++		WARN(clk_prepare_enable(krait_cc_clks[cpu].clk),
+ 		     "Unable to turn on CPU%d clock", cpu);
+ 	}
+ 
+@@ -410,18 +406,18 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 	 * two different rates to force a HFPLL reinit under all
+ 	 * circumstances.
+ 	 */
+-	cur_rate = clk_get_rate(clks[l2_mux]);
++	cur_rate = clk_get_rate(krait_cc_clks[l2_mux].clk);
+ 	aux_rate = 384000000;
+ 	if (cur_rate < aux_rate) {
+ 		pr_info("L2 @ Undefined rate. Forcing new rate.\n");
+ 		cur_rate = aux_rate;
+ 	}
+-	clk_set_rate(clks[l2_mux], aux_rate);
+-	clk_set_rate(clks[l2_mux], 2);
+-	clk_set_rate(clks[l2_mux], cur_rate);
+-	pr_info("L2 @ %lu KHz\n", clk_get_rate(clks[l2_mux]) / 1000);
++	clk_set_rate(krait_cc_clks[l2_mux].clk, aux_rate);
++	clk_set_rate(krait_cc_clks[l2_mux].clk, 2);
++	clk_set_rate(krait_cc_clks[l2_mux].clk, cur_rate);
++	pr_info("L2 @ %lu KHz\n", clk_get_rate(krait_cc_clks[l2_mux].clk) / 1000);
+ 	for_each_possible_cpu(cpu) {
+-		clk = clks[cpu];
++		clk = krait_cc_clks[cpu].clk;
+ 		cur_rate = clk_get_rate(clk);
+ 		if (cur_rate < aux_rate) {
+ 			pr_info("CPU%d @ Undefined rate. Forcing new rate.\n", cpu);
+@@ -434,7 +430,7 @@ static int krait_cc_probe(struct platform_device *pdev)
+ 		pr_info("CPU%d @ %lu KHz\n", cpu, clk_get_rate(clk) / 1000);
+ 	}
+ 
+-	of_clk_add_provider(dev->of_node, krait_of_get, clks);
++	of_clk_add_provider(dev->of_node, krait_of_get, &krait_cc_clks);
+ 
+ 	return 0;
+ }
+-- 
+2.39.2
+
diff --git a/target/linux/ipq806x/patches-5.15/999-02-clk-qcom-krait-cc-add-specific-notifier-for-L2-pri-a.patch b/target/linux/ipq806x/patches-5.15/999-02-clk-qcom-krait-cc-add-specific-notifier-for-L2-pri-a.patch
new file mode 100644
index 0000000000..77ecea7555
--- /dev/null
+++ b/target/linux/ipq806x/patches-5.15/999-02-clk-qcom-krait-cc-add-specific-notifier-for-L2-pri-a.patch
@@ -0,0 +1,148 @@
+From 9a45bd6f1585bb24583a8534cd52569c9268e837 Mon Sep 17 00:00:00 2001
+From: Christian Marangi <ansuelsmth@gmail.com>
+Date: Sun, 16 Apr 2023 19:31:18 +0200
+Subject: [PATCH 2/3] clk: qcom: krait-cc: add specific notifier for L2 pri and
+ sec mux
+
+Add specific notifier for L2 pri and sec mux.
+
+Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
+---
+ drivers/clk/qcom/krait-cc.c | 75 ++++++++++++++++++++++++++++++++++---
+ 1 file changed, 70 insertions(+), 5 deletions(-)
+
+diff --git a/drivers/clk/qcom/krait-cc.c b/drivers/clk/qcom/krait-cc.c
+index 83c72364e89d..8fffe9bf88ba 100644
+--- a/drivers/clk/qcom/krait-cc.c
++++ b/drivers/clk/qcom/krait-cc.c
+@@ -37,14 +37,71 @@ static unsigned int sec_mux_map[] = {
+ 	0,
+ };
+ 
++#define SEC_MUX_SAFE_INDEX	1
++
+ static unsigned int pri_mux_map[] = {
+ 	1,
+ 	2,
+ 	0,
+ };
++#define PRI_MUX_SAFE_INDEX	2
+ 
+ static struct krait_cc_clk krait_cc_clks[clks_max];
+ 
++/*
++ * Notifier function for switching the muxes to safe parent
++ * while the hfpll is getting reprogrammed.
++ */
++static int krait_l2_pri_mux_notifier_cb(struct notifier_block *nb,
++				unsigned long event,
++				void *data)
++{
++	struct krait_mux_clk *mux = &krait_cc_clks[l2_mux].pri_mux;
++	int ret = 0;
++	/* Switch to safe parent */
++	if (event == PRE_RATE_CHANGE) {
++		mux->old_index = krait_mux_clk_ops.get_parent(&mux->hw);
++		ret = krait_mux_clk_ops.set_parent(&mux->hw, PRI_MUX_SAFE_INDEX);
++		mux->reparent = false;
++	/*
++	 * By the time POST_RATE_CHANGE notifier is called,
++	 * clk framework itself would have changed the parent for the new rate.
++	 * Only otherwise, put back to the old parent.
++	 */
++	} else if (event == POST_RATE_CHANGE) {
++		if (!mux->reparent)
++			ret = krait_mux_clk_ops.set_parent(&mux->hw,
++							   mux->old_index);
++	}
++
++	return notifier_from_errno(ret);
++}
++
++static int krait_l2_sec_mux_notifier_cb(struct notifier_block *nb,
++				unsigned long event,
++				void *data)
++{
++	struct krait_mux_clk *mux = &krait_cc_clks[l2_mux].sec_mux;
++	int ret = 0;
++	/* Switch to safe parent */
++	if (event == PRE_RATE_CHANGE) {
++		mux->old_index = krait_mux_clk_ops.get_parent(&mux->hw);
++		ret = krait_mux_clk_ops.set_parent(&mux->hw, SEC_MUX_SAFE_INDEX);
++		mux->reparent = false;
++	/*
++	 * By the time POST_RATE_CHANGE notifier is called,
++	 * clk framework itself would have changed the parent for the new rate.
++	 * Only otherwise, put back to the old parent.
++	 */
++	} else if (event == POST_RATE_CHANGE) {
++		if (!mux->reparent)
++			ret = krait_mux_clk_ops.set_parent(&mux->hw,
++							   mux->old_index);
++	}
++
++	return notifier_from_errno(ret);
++}
++
+ /*
+  * Notifier function for switching the muxes to safe parent
+  * while the hfpll is getting reprogrammed.
+@@ -75,12 +132,12 @@ static int krait_notifier_cb(struct notifier_block *nb,
+ 	return notifier_from_errno(ret);
+ }
+ 
+-static int krait_notifier_register(struct device *dev, struct clk *clk,
+-				   struct krait_mux_clk *mux)
++static int krait_notifier_register(struct device *dev, notifier_fn_t notifier_cb,
++				   struct clk *clk, struct krait_mux_clk *mux)
+ {
+ 	int ret = 0;
+ 
+-	mux->clk_nb.notifier_call = krait_notifier_cb;
++	mux->clk_nb.notifier_call = notifier_cb;
+ 	ret = devm_clk_notifier_register(dev, clk, &mux->clk_nb);
+ 	if (ret)
+ 		dev_err(dev, "failed to register clock notifier: %d\n", ret);
+@@ -152,6 +209,7 @@ krait_add_sec_mux(struct device *dev, struct krait_cc_clk *krait_cc,
+ 		  unsigned int offset, bool unique_aux)
+ {
+ 	int cpu, ret;
++	notifier_fn_t notifier_cb;
+ 	struct krait_mux_clk *mux = &krait_cc->sec_mux;
+ 	static struct clk_parent_data sec_mux_list[2] = {
+ 		{ .name = "qsb", .fw_name = "qsb" },
+@@ -206,7 +264,10 @@ krait_add_sec_mux(struct device *dev, struct krait_cc_clk *krait_cc,
+ 
+ 	clk = &mux->hw;
+ 
+-	ret = krait_notifier_register(dev, mux->hw.clk, mux);
++	notifier_cb = krait_notifier_cb;
++	if (id < 0)
++		notifier_cb = krait_l2_sec_mux_notifier_cb;
++	ret = krait_notifier_register(dev, notifier_cb, mux->hw.clk, mux);
+ 	if (ret) {
+ 		clk = ERR_PTR(ret);
+ 		goto err_clk;
+@@ -233,6 +294,7 @@ krait_add_pri_mux(struct device *dev, struct krait_cc_clk *krait_cc,
+ 		  int id, const char *s, unsigned int offset)
+ {
+ 	int ret;
++	notifier_fn_t notifier_cb;
+ 	struct krait_mux_clk *mux = &krait_cc->pri_mux;
+ 	static struct clk_parent_data p_data[3];
+ 	struct clk_init_data init = {
+@@ -276,7 +338,10 @@ krait_add_pri_mux(struct device *dev, struct krait_cc_clk *krait_cc,
+ 
+ 	clk = &mux->hw;
+ 
+-	ret = krait_notifier_register(dev, mux->hw.clk, mux);
++	notifier_cb = krait_notifier_cb;
++	if (id < 0)
++		notifier_cb = krait_l2_pri_mux_notifier_cb;
++	ret = krait_notifier_register(dev, notifier_cb, mux->hw.clk, mux);
+ 	if (ret)
+ 		clk = ERR_PTR(ret);
+ 
+-- 
+2.39.2
+
diff --git a/target/linux/ipq806x/patches-5.15/999-03-clk-qcom-krait-cc-protect-L2-pri-and-sec-mux-safe-pa.patch b/target/linux/ipq806x/patches-5.15/999-03-clk-qcom-krait-cc-protect-L2-pri-and-sec-mux-safe-pa.patch
new file mode 100644
index 0000000000..c05f527433
--- /dev/null
+++ b/target/linux/ipq806x/patches-5.15/999-03-clk-qcom-krait-cc-protect-L2-pri-and-sec-mux-safe-pa.patch
@@ -0,0 +1,78 @@
+From 3dc925bd14f50c5834b6b2896ef1a4460234c91c Mon Sep 17 00:00:00 2001
+From: Christian Marangi <ansuelsmth@gmail.com>
+Date: Sun, 16 Apr 2023 19:33:39 +0200
+Subject: [PATCH 3/3] clk: qcom: krait-cc: protect L2 pri and sec mux safe
+ parent with locks
+
+Protect L2 pri and sec mux safe parent with spin locks.
+
+Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
+---
+ drivers/clk/qcom/krait-cc.c | 14 ++++++++++++++
+ 1 file changed, 14 insertions(+)
+
+diff --git a/drivers/clk/qcom/krait-cc.c b/drivers/clk/qcom/krait-cc.c
+index 8fffe9bf88ba..58b45ded63d3 100644
+--- a/drivers/clk/qcom/krait-cc.c
++++ b/drivers/clk/qcom/krait-cc.c
+@@ -12,6 +12,7 @@
+ #include <linux/clk.h>
+ #include <linux/clk-provider.h>
+ #include <linux/slab.h>
++#include <linux/spinlock.h>
+ 
+ #include "clk-krait.h"
+ 
+@@ -47,6 +48,7 @@ static unsigned int pri_mux_map[] = {
+ #define PRI_MUX_SAFE_INDEX	2
+ 
+ static struct krait_cc_clk krait_cc_clks[clks_max];
++static DEFINE_SPINLOCK(krait_cc_l2_mux_lock);
+ 
+ /*
+  * Notifier function for switching the muxes to safe parent
+@@ -57,7 +59,11 @@ static int krait_l2_pri_mux_notifier_cb(struct notifier_block *nb,
+ 				void *data)
+ {
+ 	struct krait_mux_clk *mux = &krait_cc_clks[l2_mux].pri_mux;
++	unsigned long flags;
+ 	int ret = 0;
++
++	spin_lock_irqsave(&krait_cc_l2_mux_lock, flags);
++
+ 	/* Switch to safe parent */
+ 	if (event == PRE_RATE_CHANGE) {
+ 		mux->old_index = krait_mux_clk_ops.get_parent(&mux->hw);
+@@ -74,6 +80,8 @@ static int krait_l2_pri_mux_notifier_cb(struct notifier_block *nb,
+ 							   mux->old_index);
+ 	}
+ 
++	spin_unlock_irqrestore(&krait_cc_l2_mux_lock, flags);
++
+ 	return notifier_from_errno(ret);
+ }
+ 
+@@ -82,7 +90,11 @@ static int krait_l2_sec_mux_notifier_cb(struct notifier_block *nb,
+ 				void *data)
+ {
+ 	struct krait_mux_clk *mux = &krait_cc_clks[l2_mux].sec_mux;
++	unsigned long flags;
+ 	int ret = 0;
++
++	spin_lock_irqsave(&krait_cc_l2_mux_lock, flags);
++
+ 	/* Switch to safe parent */
+ 	if (event == PRE_RATE_CHANGE) {
+ 		mux->old_index = krait_mux_clk_ops.get_parent(&mux->hw);
+@@ -99,6 +111,8 @@ static int krait_l2_sec_mux_notifier_cb(struct notifier_block *nb,
+ 							   mux->old_index);
+ 	}
+ 
++	spin_unlock_irqrestore(&krait_cc_l2_mux_lock, flags);
++
+ 	return notifier_from_errno(ret);
+ }
+ 
+-- 
+2.39.2
+
diff --git a/target/linux/ipq806x/patches-5.15/999-04-clk-qcom-krait-cc-fix-wrong-parent-order-for-sec-mux.patch b/target/linux/ipq806x/patches-5.15/999-04-clk-qcom-krait-cc-fix-wrong-parent-order-for-sec-mux.patch
new file mode 100644
index 0000000000..c7b2dc9120
--- /dev/null
+++ b/target/linux/ipq806x/patches-5.15/999-04-clk-qcom-krait-cc-fix-wrong-parent-order-for-sec-mux.patch
@@ -0,0 +1,36 @@
+From 49691f86f5e3f6229681deafa2c8e197a4d54919 Mon Sep 17 00:00:00 2001
+From: Christian Marangi <ansuelsmth@gmail.com>
+Date: Sun, 16 Apr 2023 21:17:42 +0200
+Subject: [PATCH 4/4] clk: qcom: krait-cc: fix wrong parent order for sec mux
+
+Fix wrong parent order for sec mux. With the help of debug regs to
+measure clk, it was discovered that
+- sel 0 refer to the qsb clock (that is the parent clock)
+- sel 2 refer to the pll8_vote clock
+
+Set the parent order to follow:
+- index 0 --> qsb clock --> sel 0
+- index 1 --> pll8_vote clock --> sel 2
+
+Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
+---
+ drivers/clk/qcom/krait-cc.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/drivers/clk/qcom/krait-cc.c b/drivers/clk/qcom/krait-cc.c
+index 58b45ded63d3..d61aaa7ea518 100644
+--- a/drivers/clk/qcom/krait-cc.c
++++ b/drivers/clk/qcom/krait-cc.c
+@@ -226,8 +226,8 @@ krait_add_sec_mux(struct device *dev, struct krait_cc_clk *krait_cc,
+ 	notifier_fn_t notifier_cb;
+ 	struct krait_mux_clk *mux = &krait_cc->sec_mux;
+ 	static struct clk_parent_data sec_mux_list[2] = {
+-		{ .name = "qsb", .fw_name = "qsb" },
+ 		{},
++		{ .name = "qsb", .fw_name = "qsb" },
+ 	};
+ 	struct clk_init_data init = {
+ 		.parent_data = sec_mux_list,
+-- 
+2.39.2
+
